<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.iclass.spring_4restapi.mapper.CustomerMapper">
<!-- 
	id는 sql 을 찾는 식별값.(개발자 정의) 
    Mybatis-Spring 은 namespace 를 반드시 인터페이스의 "패키지이름.인터페이스이름"  로 합니다.
	인터페이스의 구현체(해당 클래스로 만들어진 객체)를 만들 때 sql 이 매핑 될 수 있습니다.
-->
	<select id="selectByPk" parameterType="String" resultType="CustomerDto">
	<!-- 매개변수의 값은 타입과 이름으로 매핑 -->
		select * from tbl_customer#
		where customer_id=#{customerId}
	</select>

	<select id="selectAll" resultType="CustomerDto">
	<!-- n개 행이지만 resultType 에 List 를 쓰지 않고 Generic Type 만 설정  -->
		select * from tbl_customer# order by customer_id
	</select>

	<!-- insert, update, delete 는 resultType 이 없습니다. dao 에서는 preparedStatement 처럼 리턴 있음.  -->
	<!-- insert, update, delete 의 리턴 타입은 int (insert, update, delete 수행한 행의 갯수) -->
	<insert id="insert" parameterType="CustomerDto">
	<!-- 매개변수의 이름은 vo 객체의 getter 를 실행합니다. (getXXXX) XXXX 이 매개변수 이름.(3.4 이전버전)
	     그 이후는 직접 필드명으로 접근해서 가져온다.🔥 vo 클래스에 선언된 필드(변수)명을 매개변수 이름으로 '꼭' 합니다.
	-->
		insert into tbl_customer# (customer_id,name,email,age,reg_date) 
                    values (#{customerId}, #{name}, #{email}, #{age}, sysdate)
	</insert>

	<update id="update" parameterType="CustomerDto">
		update tbl_customer#
		set email = #{email}, age = #{age} 
		where customer_id = #{customerId}
	</update>
	
	<delete id="delete" parameterType="String">
		delete from tbl_customer# 
			where customer_id = #{customerId}
	</delete>
</mapper>  
<!-- 
✅ parameterType, resultType 이 클래스일 때, "패키지이름.클래스이름" 으로 해야 합니다.
- CustomerVo 는 TypeAlias(별칭) 를 설정하고 사용 중이며 그렇지 않다면 mybatis.vo.CustomerVo 로 해야 합니다.
String 은 기본 패키지 java.lang 에 속하는 클래스이므로 생략할 수 있습니다.
- 기본형 타입은 ⭕ https://mybatis.org/mybatis-3/ko/configuration.html 페이지 중간 별칭과 매핑된 타입 참고
- (3.2버전 이후에는 jdk 클래스의 map 등의 별칭이 사용 가능함.)
parameterType="map" 또는 "list" 또는 "collection"
resultType="map" 
-->

<!-- 
${}  : jsp에서 getAttribute 역할
       문자열 기호 ' ' 가 자동으로 생기지 않습니다.
#{}  : 매퍼 XML 에서 파라미터 기호
       문자열 기호 ' ' 가 자동으로 생깁니다.
 -->
